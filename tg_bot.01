import telebot
from telebot import types
import _collections
import time

bot = telebot.TeleBot("5033802825:AAHWcOkRmWmy-K3Q-8-BNIRVF2Zhx5DIqJw")


# Start
@bot.message_handler(commands=["start"])
def start_message(message):
    chat_id = message.from_user.id
    bot.send_message(chat_id=chat_id, text="Start talking?", reply_markup=start_markup)


# End conv
@bot.message_handler(func=lambda message: message.text == "End conversation")
def end_conv(message):
    print(f"{message.chat.id} quit of the queue")
    types.ReplyKeyboardRemove()
    id = message.chat.id
    bot.send_message(chat_id=id, text="You were disconnected")
    bot.send_message(chat_id=connected_users[id], text="You were disconnected")
    connected_users[connected_users[id]] = None
    connected_users[id] = None
    print(f"Queue: {user_queue}, connected: {connected_users}")


# Adding in queue
@bot.message_handler(func=lambda message: message.text == "Start conversation")
def handle_start(message):
    types.ReplyKeyboardRemove()
    id = message.chat.id
    user_queue.append(id)
    bot.send_message(chat_id=id, text="You were added in queue. Waiting...", reply_markup=end_queue_markup)
    if len(user_queue) > 1:
        connecting_users(id)
    print(f"{id} was added in queue")


# Connecting users
def connecting_users(user_2):
    user_1 = user_queue.popleft()
    connected_users[user_1] = user_2
    connected_users[user_2] = user_1
    user_queue.popleft()
    print(f"Queue: {user_queue}, connected: {connected_users}")
    print(f"{user_2} connected with {user_1}")
    bot.send_message(chat_id=user_1, text="User found! Just text smth.", reply_markup=end_markup)
    bot.send_message(chat_id=user_2, text="User found! Just text smth.", reply_markup=end_markup)


# Ending queue
@bot.message_handler(func=lambda message: message.text == "End queue")
def end_queue(message):
    types.ReplyKeyboardRemove()
    id = message.chat.id
    bot.send_message(chat_id=id, text="You were disconnected")
    user_queue.popleft()
    print(f"User queue:{user_queue}")


# Sending messages
@bot.message_handler(func=lambda message: connected_users.get(message.chat.id, -1) != -1)
def send_mes(message):
    bot.send_message(chat_id=connected_users[message.chat.id], text=message.text)


if __name__ == "__main__":
    user_queue = _collections.deque()
    connected_users = {}
    start_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("Start conversation")
    start_markup.add(itembtn)
    end_queue_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("End queue")
    end_queue_markup.add(itembtn)
    end_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("End conversation")
    end_markup.add(itembtn)
    bot.infinity_polling()
