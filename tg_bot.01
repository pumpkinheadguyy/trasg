import telebot
from telebot import types
import _collections
import time

bot = telebot.TeleBot("5033802825:AAHWcOkRmWmy-K3Q-8-BNIRVF2Zhx5DIqJw")


# Start
@bot.message_handler(commands=["start"])
def start_message(message):
    chat_id = message.from_user.id
    bot.send_message(chat_id=chat_id, text="Start talking?", reply_markup=start_markup)


# End conv
@bot.message_handler(func=lambda message: message.text == "End conversation")
def end_conv(message):
    types.ReplyKeyboardRemove()
    # global connected
    # connected = False
    id = message.chat.id
    bot.send_message(chat_id=id, text="You were disconnected")
    bot.send_message(chat_id=connected_users[id], text="You were disconnected")
    connected_users[connected_users[id]] = None
    connected_users[id] = None
    print(f"Queue: {user_queue}, connected: {connected_users}")


# Connecting users(Starting conv/ waiting for people)
@bot.message_handler(func=lambda message: message.text == "Start conversation")
def handle_start(message):
    types.ReplyKeyboardRemove()
    # global connected
    id = message.chat.id
    user_queue.append(id)
    bot.send_message(chat_id=id, text="You were added in queue. Waiting...", reply_markup=end_queue_markup)
    while len(user_queue) < 2 and user_queue[0] == id:
        print(f"Now: users {user_queue}")
        time.sleep(5)
    # connected = True
    second_user = user_queue.popleft()
    connected_users[id] = second_user
    print(f"{id} connected with {second_user}")
    bot.send_message(chat_id=id, text="User found! Just text smth.", reply_markup=end_markup)


# Ending queue
@bot.message_handler(func=lambda message: message.text == "End queue")
def end_queue(message):
    types.ReplyKeyboardRemove()
    id = message.chat.id
    bot.send_message(chat_id=id, text="You were disconnected")
    connected_users[id] = None
    user_queue.popleft()


# Sending messages
@bot.message_handler(func=lambda message: connected_users.get(message.chat.id, -1) != -1)
def send_mes(message):
    bot.send_message(chat_id=connected_users[message.chat.id], text=message.text)


if __name__ == "__main__":
    # connected = False
    user_queue = _collections.deque()
    connected_users = {}
    # creating markups
    start_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("Start conversation")
    start_markup.add(itembtn)
    end_queue_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("End queue")
    end_queue_markup.add(itembtn)
    end_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    itembtn = types.KeyboardButton("End conversation")
    end_markup.add(itembtn)
    bot.infinity_polling()
